						Day7-Assignment 

50.Explain the importance of toString() and equals() method of the Object class and override them on class Employee(empId,name,salary).  a. Create class for main method(say XYZ),and accept five employees information and store in an array. Also ensure if entered empId already exist or not (use equals method).  b. Display all employee info using toString method.
Ans:
import java.util.Arrays;
import java.util.Scanner;

class Employee3 {
	private int empId;
	private String name;
	private int salary;
	public Employee3(int empId, String name, int salary) {
		super();
		this.empId = empId;
		this.name = name;
		this.salary = salary;
	}
	@Override
	public String toString() {
		return "EmpId : "+empId + " EmpName : "+ name + " Salary : " + salary+"\n";
	}
}
public class Assign50 {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		Employee3 eArr[] = { new Employee3(101,"Amrita",20010),
				new Employee3(102,"Shivi",20020),
				new Employee3(103,"Ram",30020),
				new Employee3(104,"Parvati",40020),
				new Employee3(105,"Dinker",60020),
				};
		System.out.println(Arrays.toString(eArr));
      		sc.close();
	}
}

================================================================================================================================

51.Create a program that helps banks to maintain records. It should have following facilities. o Anybody can create current or saving account with following initial information: account number, name, balance, and branch. o display account detail for a particular accounts. o display total money deposited in bank. o allow deposit and  withdrawal in an account  . o for saving account opening balance and minimum balance must be 5000. o for current account opening balance and minimum balance must be 1000. o can not withdraw the amount from the account that makes balance less than the minimum balance. 
Ans :

package Assignment1;

interface MinimumBalance {
	public static final int savingMinBalance = 5000;
	public static final int currentMinBalance = 1000;
}

class AccountDetails implements MinimumBalance {
	private int ano;
	private String name;
	private static double balance;
	private double openingBalance;
	private double minBalance;
	private String branch;

	public AccountDetails(int ano, String name, double balance, double openingBalance, double minBalance,
			String branch) {
		super();
		this.ano = ano;
		this.name = name;
		this.balance = balance;
		this.openingBalance = openingBalance;
		this.minBalance = minBalance;
		this.branch = branch;
	}

	void displayAccounts(int ano) {
		System.out.println("AC : " + ano);
		System.out.println("Name : " + name);
		if (minBalance == savingMinBalance) {
			System.out.println("Saving Account");
			System.out.println("Balance : " + balance);
		} else if (minBalance == currentMinBalance) {
			System.out.println("Current Account");
			System.out.println("Balance : " + balance);
		}
		System.out.println("Branch : " + branch);
	}

	void deposit(double amt) {
		balance += amt;
		System.out.println("Current Balance : " + balance);
	}

	void withdraw(double amt) {
		if (balance == currentMinBalance) {
			System.out.println("you can't withdraw");
		} 
		else if (balance == savingMinBalance) {
			System.out.println("you can't withdraw");
		}
		else {
			balance -= amt;
			
			System.out.println("Current Balance : " + balance + balance);
		}
	}

}

public class Assign51 {
	public static void main(String[] args) {
		AccountDetails a1 = new AccountDetails(38321, "Amrita", 1000, 0.0, 1000, "maihar");
		// AccountDetails a2 = new AccountDetails(38321,"Amrita",19000,5000,"satna");
		a1.displayAccounts(38321);
		a1.deposit(200);

	}
}

